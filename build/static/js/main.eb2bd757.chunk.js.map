{"version":3,"sources":["apollo-spacex-graphql/components/LoaderCardComponent.jsx","apollo-spacex-graphql/modules/graphql/queries/queries.js","apollo-spacex-graphql/common/constants.js","apollo-spacex-graphql/modules/Launches.jsx","apollo-spacex-graphql/modules/Rockets.jsx","apollo-spacex-graphql/modules/UpComingLaunches.jsx","apollo-spacex-graphql/historyData.js","apollo-spacex-graphql/components/NavBar.jsx","apollo-spacex-graphql/Apollo.js","apollo-spacex-graphql/modules/GetLaunchById.jsx","apollo-spacex-graphql/modules/GetRocketById.jsx","apollo-spacex-graphql/modules/graphql/mutations/mutations.js","apollo-spacex-graphql/components/LoaderComponent.jsx","apollo-spacex-graphql/components/CommonTable.jsx","apollo-spacex-graphql/modules/Users.jsx","apollo-spacex-graphql/modules/UserForm.jsx","apollo-spacex-graphql/modules/GetUpComingLaunchById.jsx","apollo-spacex-graphql/modules/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["LoaderCardComponent","loading","wrap","map","value","span","xs","sm","md","lg","className","active","Meta","title","description","GET_LAUNCH_BY_ID","gql","GET_ROCKET_BY_ID","GET_UPCOMING_LAUNCH_BY_ID","GET_LAUNCHES","TOTAL_ROCKET_COUNT","GET_ROCKETS","GET_UPCOMING_LAUNCHES","TOTAL_UPCOMING_LAUNCH_COUNT","TOTAL_LAUNCH_COUNT","GET_USER","GET_DATA_COUNT","GET_USERS","NEW_QUERY","routes","Launches","totalCountData","useQuery","totalCount","data","launches","length","useState","offset","setOffset","page","setPage","itemsPerPage","setItemsPerPage","tableData","setTableData","variables","limit","error","fetchMore","JSON","stringify","Item","href","launch","id","hoverable","mission_name","details","current","pageSizeOptions","onShowSizeChange","size","then","res","refetch","showSizeChanger","onChange","pageNum","pageSize","total","rockets","useEffect","rocket","name","defaultPageSize","UpComingLaunches","launchesUpcoming","history","createBrowserHistory","NavBar","window","location","pathname","substring","setCurrent","onClick","e","key","selectedKeys","mode","style","textDecoration","rel","disableToastTimeout","cacheData","InMemoryCache","dateConvert","date","moment","format","toast","content","message","type","destroy","info","success","warning","httpLink","createHttpLink","uri","credentials","responseMessageLink","ApolloLink","operation","forward","response","isObject","Object","keys","status","setTimeout","oResponse","errorLink","onError","options","graphQLErrors","networkError","statusCode","clearTimeout","result","replace","get","errors","errorMessage","locations","path","extensions","Sentry","Error","code","exception","console","log","client","ApolloClient","link","from","cache","Apollo","children","ApolloProvider","GetLaunchById","launchId","useParams","links","flickr_images","imageLink","src","height","alt","ships","rocket_name","launch_date_local","launch_site","site_name","video_link","rocketId","company","country","boosters","engines","engines_loss_max","diameter","meters","mass","kg","landing_legs","number","material","cost_per_launch","ADD_USER","EDIT_USER","DELETE_USER","LoaderComponent","props","spinning","setHeight","rest","TableComponent","columns","dataSource","loadingData","tableClassName","bordered","pagination","Users","search","setSearch","users","Form","useForm","form","count","setCount","fetchPolicy","useMutation","deleteUser","cancel","dataIndex","render","text","record","onConfirm","_eq","onCancel","okText","cancelText","layout","required","placeholder","target","searchText","concat","query","CommonTable","UserForm","userId","editUser","addUser","twitter","setTwitter","setRocket","setName","redirect","setRedirect","disabled","setDisabled","a","to","Content","onFinish","label","tooltip","rules","warningOnly","min","htmlType","Home","exact","component","Rockets","GetRocketById","GetUpComingLaunchById","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb2bd757.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Skeleton, Card, Row, Col } from 'antd';\r\n\r\nexport default function LoaderCardComponent({ loading }) {\r\n  return (\r\n    <Row wrap>\r\n      {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((value) => (\r\n        <Col\r\n          key={value}\r\n          span={8}\r\n          xs={{ span: 24 }}\r\n          sm={{ span: 24 }}\r\n          md={{ span: 12 }}\r\n          lg={{ span: 8 }}\r\n          className=\"pad\"\r\n        >\r\n          <Skeleton loading={loading} active>\r\n            <Card loading={loading} key={value}>\r\n              <Card.Meta title=\"loading\" description=\"loading\" />\r\n            </Card>\r\n          </Skeleton>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const GET_LAUNCH_BY_ID = gql`\r\n  query LaunchById($id: ID!) {\r\n    launch(id: $id) {\r\n      details\r\n      launch_date_local\r\n      launch_site {\r\n        site_name\r\n      }\r\n      links {\r\n        flickr_images\r\n        video_link\r\n      }\r\n      mission_name\r\n      rocket {\r\n        rocket_name\r\n      }\r\n      ships {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ROCKET_BY_ID = gql`\r\n  query RocketById($id: ID!) {\r\n    rocket(id: $id) {\r\n      boosters\r\n      company\r\n      cost_per_launch\r\n      country\r\n      description\r\n      diameter {\r\n        meters\r\n      }\r\n      engines {\r\n        engine_loss_max\r\n      }\r\n      height {\r\n        meters\r\n      }\r\n      id\r\n      landing_legs {\r\n        number\r\n        material\r\n      }\r\n      mass {\r\n        kg\r\n      }\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_UPCOMING_LAUNCH_BY_ID = gql`\r\n  query UpcomingLaunchById($id: ID!) {\r\n    launchesUpcoming(find: { id: $id }) {\r\n      details\r\n      id\r\n      launch_date_local\r\n      launch_site {\r\n        site_name\r\n      }\r\n      mission_name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_LAUNCHES = gql`\r\n  query($offset: Int, $limit: Int) {\r\n    launches(\r\n      offset: $offset\r\n      limit: $limit\r\n      order: \"DESC\"\r\n      sort: \"launch_date_local\"\r\n    ) {\r\n      id\r\n      details\r\n      mission_name\r\n      launch_date_local\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TOTAL_ROCKET_COUNT = gql`\r\n  query {\r\n    rockets {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ROCKETS = gql`\r\n  query getrockets($offset: Int, $limit: Int) {\r\n    rockets(offset: $offset, limit: $limit) {\r\n      description\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_UPCOMING_LAUNCHES = gql`\r\n  query getlaunches($offset: Int) {\r\n    launchesUpcoming(\r\n      limit: 1\r\n      order: \"DESC\"\r\n      sort: \"launch_date_local\"\r\n      offset: $offset\r\n    ) {\r\n      details\r\n      id\r\n      mission_name\r\n      launch_date_local\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TOTAL_UPCOMING_LAUNCH_COUNT = gql`\r\n  query {\r\n    launchesUpcoming {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TOTAL_LAUNCH_COUNT = gql`\r\n  query {\r\n    launches {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USER = gql`\r\n  query GetUser($_eq: uuid) {\r\n    users(where: { id: { _eq: $_eq } }) {\r\n      name\r\n      id\r\n      rocket\r\n      twitter\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_DATA_COUNT = gql`\r\n  query {\r\n    users {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USERS = gql`\r\n  query getusers(\r\n    $offset: Int\r\n    $limit: Int\r\n    $_ilike: String\r\n    $_similar: String\r\n  ) {\r\n    users(\r\n      limit: $limit\r\n      offset: $offset\r\n      order_by: { timestamp: desc }\r\n      where: { name: { _ilike: $_ilike }, rocket: { _ilike: $_similar } }\r\n    ) {\r\n      name\r\n      id\r\n      rocket\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NEW_QUERY = gql`\r\n  query users($offset: Int, $limit: Int, $search: String) {\r\n    users(\r\n      order_by: { timestamp: desc }\r\n      limit: $limit\r\n      offset: $offset\r\n      where: {\r\n        _or: [{ name: { _ilike: $search } }, { rocket: { _ilike: $search } }]\r\n      }\r\n    ) {\r\n      id\r\n      name\r\n      rocket\r\n    }\r\n  }\r\n`;\r\n\r\n// name: { _ilike: $searchname }\r\n// const FILTER_ROCKETNAME = gql`\r\n//   query getusername($_ilike: String) {\r\n//     users(where: {rocket: {_ilike: $_ilike}}){\r\n//       name\r\n//       id\r\n//       rocket\r\n//     }\r\n//   }\r\n// `\r\n\r\n// const FILTER_USERNAME = gql`\r\n//   query getusername($_ilike: String) {\r\n//     users(where: {_or: {name: {_ilike: $_ilike}}}){\r\n//       name\r\n//       id\r\n//       rocket\r\n//     }\r\n//   }\r\n// `\r\n// const NEW_QUERY = gql`\r\n//   query users($offset: Int, $limit: Int, $search: String, $searchname: String) {\r\n//     users(\r\n//       order_by: { timestamp: desc }\r\n//       limit: $limit\r\n//       offset: $offset\r\n//       where: {\r\n//         _or: [{ name: { _ilike: $search } }, { rocket: { _ilike: $search } }]\r\n//         name: { _ilike: $searchname }\r\n//       }\r\n//     ){\r\n//       id\r\n//       name\r\n//       rocket\r\n//     }\r\n//   }\r\n// `\r\n// const [filterUsers, usernameData] = useLazyQuery(FILTER_USERNAME, {\r\n//   variables:{\r\n//     _ilike\r\n//   }\r\n// })\r\n// const [filterRocket, rocketData] = useLazyQuery(FILTER_ROCKETNAME, {\r\n//   variables:{\r\n//     _ilike\r\n//   }\r\n// })\r\n","export const routes = {\r\n  DASHBOARD: '/',\r\n  USERS: '/users',\r\n  LAUNCHES: '/launches',\r\n  ROCKETS: '/rockets',\r\n  EDIT_USER: '/users/:userId/edit',\r\n  CREATE_USER: '/users/create',\r\n  ROCKET_BY_ID: '/rockets/:rocketId',\r\n  LAUNCH_BY_ID: '/launches/:launchId',\r\n  UPCOMING_LAUNCH_BY_ID: 'upcoming-launch/:launchId',\r\n  ERROR_404: '*'\r\n};\r\nexport const defaultDateFormat = 'MM/DD/YYYY';\r\n","import React, { useState } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Card, Row, Col, Pagination, Breadcrumb } from 'antd';\r\nimport LoaderCardComponent from '../components/LoaderCardComponent';\r\nimport { GET_LAUNCHES, TOTAL_LAUNCH_COUNT } from './graphql/queries/queries';\r\nimport { routes } from '../common/constants';\r\n\r\nexport default function Launches() {\r\n  const totalCountData = useQuery(TOTAL_LAUNCH_COUNT);\r\n  const totalCount =\r\n    !totalCountData.loading && totalCountData.data.launches.length;\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const [tableData, setTableData] = useState([]);\r\n  const { loading, error, data, fetchMore } = useQuery(GET_LAUNCHES, {\r\n    variables: {\r\n      limit: 10,\r\n      offset\r\n    }\r\n  });\r\n  function handleSizeChange(current, size) {\r\n    setItemsPerPage(size);\r\n    setPage(current);\r\n    fetchMore({\r\n      variables: { limit: size, offset: (current - 1) * size }\r\n    }).then((res) => setTableData(res.data));\r\n    totalCountData.refetch();\r\n  }\r\n  function handlePageChange(pageNum, pageSize) {\r\n    setOffset((pageNum - 1) * 10);\r\n    fetchMore({\r\n      variables: { limit: pageSize, offset: (pageNum - 1) * pageSize }\r\n    }).then((res) => setTableData(res.data));\r\n    totalCountData.refetch();\r\n    setPage(pageNum);\r\n  }\r\n  if (loading) {\r\n    return <LoaderCardComponent loading={loading} />;\r\n  }\r\n  if (error) return <p>Error {JSON.stringify(error)}</p>;\r\n  return (\r\n    <div className=\"mar\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item>\r\n          <a href={routes.LAUNCHES}>Launches</a>\r\n        </Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"heading\">\r\n        <h1>Launches</h1>\r\n      </div>\r\n      <Row wrap>\r\n        {((tableData.launches && tableData.launches.length > 0) ||\r\n          data.launches.length > 0) &&\r\n          (tableData.launches && tableData.launches.length > 0\r\n            ? tableData\r\n            : data\r\n          ).launches.map((launch) => (\r\n            <Col\r\n              span={8}\r\n              key={launch.id}\r\n              xs={{ span: 24 }}\r\n              sm={{ span: 24 }}\r\n              md={{ span: 12 }}\r\n              lg={{ span: 8 }}\r\n            >\r\n              <a href={`launches/${launch.id}`}>\r\n                <Card\r\n                  hoverable\r\n                  loading={loading}\r\n                  key={launch.id}\r\n                  className=\"border card-hover\"\r\n                >\r\n                  <div className=\"heading\">\r\n                    <h3>{launch.mission_name}</h3>\r\n                  </div>\r\n                  <Card.Meta className=\"mar\" description={launch.details} />\r\n                </Card>\r\n              </a>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n      <div className=\"flex-end\">\r\n        <Pagination\r\n          current={page}\r\n          pageSizeOptions={[1, 5, 10, 20]}\r\n          onShowSizeChange={handleSizeChange}\r\n          showSizeChanger\r\n          onChange={handlePageChange}\r\n          pageSize={itemsPerPage}\r\n          total={totalCount}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Card, Row, Col, Pagination, Breadcrumb } from 'antd';\r\nimport { GET_ROCKETS, TOTAL_ROCKET_COUNT } from './graphql/queries/queries';\r\nimport LoaderCardComponent from '../components/LoaderCardComponent';\r\nimport { routes } from '../common/constants';\r\n\r\nexport default function Launches() {\r\n  const [offset, setOffset] = useState(0);\r\n  const { loading, error, data, fetchMore } = useQuery(GET_ROCKETS, {\r\n    variables: {\r\n      limit: 1,\r\n      offset\r\n    }\r\n  });\r\n  const totalCountData = useQuery(TOTAL_ROCKET_COUNT);\r\n  const totalCount =\r\n    !totalCountData.loading && totalCountData.data.rockets.length;\r\n  function handlePageChange(pageNum) {\r\n    setOffset(pageNum - 1);\r\n  }\r\n  useEffect(() => {\r\n    if (offset) {\r\n      fetchMore({ variables: { limit: 1, offset: offset } });\r\n      totalCountData.refetch();\r\n    }\r\n  }, [fetchMore, offset, totalCountData]);\r\n  if (loading) {\r\n    return <LoaderCardComponent loading={loading} />;\r\n  }\r\n  if (error) return <p>Error {JSON.stringify(error)}</p>;\r\n  return (\r\n    <div className=\"mar\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item>\r\n          <a href={routes.ROCKETS}>Rockets</a>\r\n        </Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"heading\">\r\n        <h1>Rockets</h1>\r\n      </div>\r\n      <Row>\r\n        {data.rockets.length > 0 &&\r\n          data.rockets.map((rocket) => (\r\n            <Col\r\n              span={8}\r\n              key={rocket.id}\r\n              xs={{ span: 24 }}\r\n              sm={{ span: 24 }}\r\n              md={{ span: 12 }}\r\n              lg={{ span: 8 }}\r\n            >\r\n              <a href={`rockets/${rocket.id}`}>\r\n                <Card\r\n                  hoverable\r\n                  loading={loading}\r\n                  key={rocket.id}\r\n                  className=\"border card-hover\"\r\n                >\r\n                  <h3>{rocket.name}</h3>\r\n                  <Card.Meta description={rocket.description} />\r\n                </Card>\r\n              </a>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n      <div className=\"flex-end\">\r\n        <Pagination\r\n          current={offset + 1}\r\n          onChange={handlePageChange}\r\n          defaultPageSize={1}\r\n          pageSize={1}\r\n          total={totalCount}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Card, Row, Col, Pagination, Breadcrumb } from 'antd';\r\nimport { routes } from '../common/constants';\r\nimport LoaderCardComponent from '../components/LoaderCardComponent';\r\nimport {\r\n  GET_UPCOMING_LAUNCHES,\r\n  TOTAL_UPCOMING_LAUNCH_COUNT\r\n} from './graphql/queries/queries';\r\n\r\nexport default function UpComingLaunches() {\r\n  const [offset, setOffset] = useState(0);\r\n  const { loading, error, data, fetchMore } = useQuery(GET_UPCOMING_LAUNCHES, {\r\n    variables: {\r\n      offset\r\n    }\r\n  });\r\n  function handlePageChange(pageNum) {\r\n    setOffset(pageNum - 1);\r\n  }\r\n  const totalCountData = useQuery(TOTAL_UPCOMING_LAUNCH_COUNT);\r\n  const totalCount =\r\n    !totalCountData.loading && totalCountData.data.launchesUpcoming.length;\r\n  useEffect(() => {\r\n    if (offset) {\r\n      fetchMore({ variables: { offset: offset } });\r\n      totalCountData.refetch();\r\n    }\r\n  }, [fetchMore, offset, totalCountData]);\r\n\r\n  if (error) return <p>Error {JSON.stringify(error)}</p>;\r\n  if (loading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoaderCardComponent loading={loading} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"mar\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item>\r\n          <a href={routes.DASHBOARD}>Upcoming Launches</a>\r\n        </Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"heading\">\r\n        <h1>Upcoming Launches</h1>\r\n      </div>\r\n      <Row className=\"mar center\">\r\n        {data.launchesUpcoming.length > 0 &&\r\n          data.launchesUpcoming.map((launch) => (\r\n            <Col\r\n              span={6}\r\n              key={launch.id}\r\n              xs={{ span: 24 }}\r\n              sm={{ span: 24 }}\r\n              md={{ span: 12 }}\r\n              lg={{ span: 6 }}\r\n            >\r\n              <a href={`upcoming-launch/${launch.id}`}>\r\n                <Card\r\n                  hoverable\r\n                  loading={loading}\r\n                  key={launch.id}\r\n                  className=\"border card-hover\"\r\n                >\r\n                  <div className=\"center\">\r\n                    <h3>{launch.mission_name}</h3>\r\n                  </div>\r\n                  <Card.Meta description={launch.details} />\r\n                </Card>\r\n              </a>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n      <div className=\"flex-end\">\r\n        <Pagination\r\n          current={offset + 1}\r\n          onChange={handlePageChange}\r\n          defaultPageSize={1}\r\n          pageSize={1}\r\n          total={totalCount}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import React, { useState } from 'react';\r\nimport { Menu } from 'antd';\r\n\r\nexport default function NavBar() {\r\n  const [current, setCurrent] = useState(\r\n    window.location.pathname.substring(1) || 'home'\r\n  );\r\n  function handleClick(e) {\r\n    setCurrent(e.key);\r\n  }\r\n  return (\r\n    <div>\r\n      <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n        <Menu.Item key=\"home\">\r\n          <a\r\n            href=\"/\"\r\n            style={{ textDecoration: 'none' }}\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Home\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"launches\">\r\n          <a\r\n            href=\"/launches\"\r\n            style={{ textDecoration: 'none' }}\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Launches\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"rockets\">\r\n          <a\r\n            href=\"/rockets\"\r\n            style={{ textDecoration: 'none' }}\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Rockets\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"users\">\r\n          <a\r\n            href=\"/users\"\r\n            style={{ textDecoration: 'none' }}\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Users\r\n          </a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import moment from 'moment';\r\nimport React from 'react';\r\nimport * as Sentry from '@sentry/browser';\r\nimport { message } from 'antd';\r\nimport { get, isObject } from 'lodash';\r\nimport { onError } from '@apollo/client/link/error';\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  ApolloLink,\r\n  createHttpLink,\r\n  from\r\n} from '@apollo/client';\r\nimport { defaultDateFormat } from './common/constants';\r\nimport history from './historyData';\r\nimport NavBar from './components/NavBar';\r\n\r\nlet disableToastTimeout = null;\r\nexport const cacheData = new InMemoryCache();\r\nexport function dateConvert(date) {\r\n  return moment(date).format(defaultDateFormat);\r\n}\r\nconst toast = ({ message: content, type }) => {\r\n  message.destroy();\r\n  switch (type) {\r\n    case 'info':\r\n      message.info(content);\r\n      break;\r\n    case 'success':\r\n      message.success(content);\r\n      break;\r\n    case 'warning':\r\n      message.warning(content);\r\n      break;\r\n    case 'error':\r\n      message.error(content);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\nconst httpLink = createHttpLink({\r\n  uri: 'https://api.spacex.land/graphql/',\r\n  credentials: 'same-origin'\r\n});\r\nconst responseMessageLink = new ApolloLink((operation, forward) => {\r\n  return forward(operation).map((response) => {\r\n    const { data } = response;\r\n\r\n    if (\r\n      data &&\r\n      isObject(data) &&\r\n      Object.keys(data).length > 0 &&\r\n      data[`${Object.keys(data)[0]}`] &&\r\n      data[`${Object.keys(data)[0]}`].message\r\n    ) {\r\n      if (Object.keys(data)[0] === 'forgotUserPassword') {\r\n        if (data[`${Object.keys(data)[0]}`].status !== 'ERROR') {\r\n          setTimeout(() => {\r\n            toast({\r\n              message:\r\n                data[`${Object.keys(data)[0]}`].message ||\r\n                'Operation successful',\r\n              type: 'success'\r\n            });\r\n          }, 1000);\r\n        }\r\n      } else {\r\n        setTimeout(() => {\r\n          const oResponse = data[`${Object.keys(data)[0]}`];\r\n\r\n          if (!response) {\r\n            return;\r\n          }\r\n\r\n          toast({\r\n            message: oResponse.message || 'Operation successful',\r\n            type: oResponse.status === 'ERROR' ? 'error' : 'success'\r\n          });\r\n        }, 1000);\r\n      }\r\n    }\r\n    return response;\r\n  });\r\n});\r\n\r\nconst errorLink = onError((options) => {\r\n  const { graphQLErrors, networkError, response } = options;\r\n\r\n  if (networkError && networkError.statusCode === 405) {\r\n    if (disableToastTimeout) {\r\n      clearTimeout(disableToastTimeout);\r\n    }\r\n\r\n    disableToastTimeout = setTimeout(() => {\r\n      if (networkError.result && networkError.result.message) {\r\n        toast({\r\n          message: networkError.result.message,\r\n          type: 'error'\r\n        });\r\n      }\r\n    }, 200);\r\n\r\n    history.replace('/logout');\r\n    return;\r\n  }\r\n\r\n  if (graphQLErrors && graphQLErrors.length > 0) {\r\n    const isForBidden =\r\n      get(graphQLErrors[0], 'extensions.code') === 'FORBIDDEN';\r\n\r\n    if (!isForBidden) {\r\n      setTimeout(() => {\r\n        toast({\r\n          message: graphQLErrors[0].message,\r\n          type: 'error'\r\n        });\r\n      }, 1000);\r\n    }\r\n  } else {\r\n    setTimeout(() => {\r\n      toast({\r\n        message: 'Something went wrong!',\r\n        type: 'error'\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  if (response) {\r\n    response.errors.map((error) => {\r\n      const { message: errorMessage, locations, path, extensions } = error;\r\n\r\n      // Enable when sentry integrated\r\n      Sentry.captureException(\r\n        new Error(\r\n          `[Response error]: Message: ${errorMessage}, Location: ${locations}, Path: ${path}`\r\n        )\r\n      );\r\n\r\n      if (extensions && extensions.code === 'FORBIDDEN') {\r\n        history.replace('/access-denied');\r\n      }\r\n\r\n      if (\r\n        extensions &&\r\n        (extensions.code === 'UNAUTHENTICATED' ||\r\n          extensions.code === 405 ||\r\n          extensions.exception.name === 'JsonWebTokenError')\r\n      ) {\r\n        history.replace('/logout');\r\n      }\r\n\r\n      // eslint-disable-next-line no-console\r\n      return console.log(\r\n        `[Response error]: Message: ${errorMessage}, Location: ${locations}, Path: ${path}`\r\n      );\r\n    });\r\n  }\r\n\r\n  if (networkError) {\r\n    // eslint-disable-next-line no-console\r\n    console.log(`[Network error]: ${networkError}`);\r\n    Sentry.captureException(new Error(`[Network error]: ${networkError}`));\r\n  }\r\n});\r\nexport const client = new ApolloClient({\r\n  link: from([responseMessageLink, errorLink, httpLink]),\r\n  cache: cacheData\r\n});\r\n\r\nexport default function Apollo({ children }) {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <NavBar />\r\n      {children}\r\n    </ApolloProvider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Card, Row, Breadcrumb } from 'antd';\r\nimport { dateConvert } from '../Apollo';\r\nimport { GET_LAUNCH_BY_ID } from './graphql/queries/queries';\r\nimport LoaderCardComponent from '../components/LoaderCardComponent';\r\n\r\nexport default function GetLaunchById() {\r\n  const { launchId } = useParams();\r\n  const { loading, error, data } = useQuery(GET_LAUNCH_BY_ID, {\r\n    variables: {\r\n      id: launchId\r\n    }\r\n  });\r\n  if (loading) {\r\n    return <LoaderCardComponent loading={loading} />;\r\n  }\r\n  if (error) return <p>Error {JSON.stringify(error)}</p>;\r\n  return (\r\n    <div className=\"mar\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item>\r\n          <a href=\"/launches\">Launches</a>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>{data.launch.mission_name}</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"byID \">\r\n        <div className=\"heading\">\r\n          <h1>Launch by ID</h1>\r\n        </div>\r\n        <Row className=\"center mar\">\r\n          <div>\r\n            {' '}\r\n            {data.launch.links.flickr_images.map((imageLink) => (\r\n              <img\r\n                key={imageLink}\r\n                src={imageLink}\r\n                style={{ height: '100px' }}\r\n                alt=\"img\"\r\n              />\r\n            ))}\r\n          </div>\r\n          <div>\r\n            <Card loading={loading} key={data.launch.id} className=\"IDCard\">\r\n              <div className=\"heading\">\r\n                <h3>{data.launch.mission_name}</h3>\r\n              </div>\r\n              <div>{data.launch.details}</div>\r\n              <div>Ship name: {data.launch.ships.name}</div>\r\n              <div>Rocket name: {data.launch.rocket.rocket_name}</div>\r\n              <div>\r\n                On {dateConvert(data.launch.launch_date_local)} from{' '}\r\n                {data.launch.launch_site.site_name}\r\n              </div>\r\n              <div>\r\n                Video link:{' '}\r\n                <a href={data.launch.links.video_link}>\r\n                  {data.launch.links.video_link}\r\n                </a>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Card, Row, Breadcrumb } from 'antd';\r\nimport { routes } from '../common/constants';\r\nimport { GET_ROCKET_BY_ID } from './graphql/queries/queries';\r\nimport LoaderCardComponent from '../components/LoaderCardComponent';\r\n\r\nexport default function GetLaunchById() {\r\n  const { rocketId } = useParams();\r\n  const { loading, error, data } = useQuery(GET_ROCKET_BY_ID, {\r\n    variables: { id: rocketId }\r\n  });\r\n  if (loading) {\r\n    return <LoaderCardComponent loading={loading} />;\r\n  }\r\n  if (error) return <p>Error {JSON.stringify(error)}</p>;\r\n  return (\r\n    <div className=\"mar\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item>\r\n          <a href={routes.ROCKETS}>Rockets</a>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>{data.rocket.name}</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"byID\">\r\n        <Row className=\"center mar\">\r\n          <div className=\"heading\">\r\n            <h1>Rocket by ID</h1>\r\n          </div>\r\n          <div>\r\n            <Card loading={loading}>\r\n              <div className=\"heading\">\r\n                <h3>\r\n                  {data.rocket.name} by {data.rocket.company} from{' '}\r\n                  {data.rocket.country}\r\n                </h3>\r\n              </div>\r\n              <div>{data.rocket.description}</div>\r\n              <div>Boosters: {data.rocket.boosters}</div>\r\n              <div>\r\n                Engines: {data.rocket.engines.engines_loss_max || 'null'}\r\n              </div>\r\n              <div>Diameter: {data.rocket.diameter.meters}</div>\r\n              <div>Weight: {data.rocket.mass.kg}kg</div>\r\n              <div>Height: {data.rocket.height.meters} m</div>\r\n              <div>\r\n                {' '}\r\n                {data.rocket.landing_legs.number} landing legs made with{' '}\r\n                {data.rocket.landing_legs.material || 'null'}\r\n              </div>\r\n              <div>Cost: {data.rocket.cost_per_launch}</div>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const ADD_USER = gql`\r\n  mutation insert_users($name: String, $rocket: String, $twitter: String) {\r\n    insert_users(objects: { name: $name, rocket: $rocket, twitter: $twitter }) {\r\n      returning {\r\n        name\r\n        id\r\n        rocket\r\n        twitter\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const EDIT_USER = gql`\r\n  mutation update_users(\r\n    $_eq: uuid\r\n    $name: String\r\n    $rocket: String\r\n    $twitter: String\r\n  ) {\r\n    update_users(\r\n      where: { id: { _eq: $_eq } }\r\n      _set: { name: $name, rocket: $rocket, twitter: $twitter }\r\n    ) {\r\n      returning {\r\n        id\r\n        name\r\n        rocket\r\n        twitter\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_USER = gql`\r\n  mutation delete_users($_eq: uuid) {\r\n    delete_users(where: { id: { _eq: $_eq } }) {\r\n      returning {\r\n        name\r\n        rocket\r\n        twitter\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { Spin } from 'antd';\r\nimport React from 'react';\r\n\r\nconst LoaderComponent = (props) => {\r\n  const {\r\n    spinning = true,\r\n    size = 'large',\r\n    children,\r\n    setHeight = 100,\r\n    ...rest\r\n  } = props;\r\n\r\n  return (\r\n    <Spin\r\n      spinning={spinning}\r\n      size={size}\r\n      className=\"d-flex justify-center align-center flex-vertical\"\r\n      style={{\r\n        height: `${setHeight}vh`\r\n      }}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Spin>\r\n  );\r\n};\r\nexport default LoaderComponent;\r\n","import { Table } from 'antd';\r\nimport React from 'react';\r\n\r\nconst TableComponent = (props) => {\r\n  const {\r\n    columns,\r\n    dataSource = [],\r\n    loadingData = false,\r\n    tableClassName = '',\r\n    ...rest\r\n  } = props;\r\n\r\n  // const [paginationProps, setPaginationProps] = useState({\r\n  //   pageSizeOptions: [10, 15, 20, 50, 100],\r\n  //   defaultPageSize: 10,\r\n  //   responsive: true,\r\n  //   showSizeChanger: true,\r\n  //   position: ['bottomCenter']\r\n  // });\r\n\r\n  // useEffect(() => {\r\n  //   setPaginationProps({ ...paginationProps, ...paginationConfig });\r\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, [paginationConfig]);\r\n\r\n  return (\r\n    <Table\r\n      columns={columns}\r\n      bordered // by default false if want then pass true from props\r\n      dataSource={dataSource}\r\n      className={tableClassName}\r\n      pagination={false} // for server side or client side pagination\r\n      loading={{\r\n        spinning: loadingData, // keep it true to set loader\r\n        size: 'large' // currently kept large loader\r\n      }}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TableComponent;\r\n","import React, { useState } from 'react';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport {\r\n  Space,\r\n  message,\r\n  Popconfirm,\r\n  Input,\r\n  Button,\r\n  Form,\r\n  Pagination,\r\n  Breadcrumb\r\n} from 'antd';\r\nimport {\r\n  GET_USERS,\r\n  GET_DATA_COUNT,\r\n  NEW_QUERY\r\n} from './graphql/queries/queries';\r\nimport { DELETE_USER } from './graphql/mutations/mutations';\r\nimport LoaderComponent from '../components/LoaderComponent';\r\nimport CommonTable from '../components/CommonTable';\r\nimport { client } from '../Apollo';\r\nimport { routes } from '../common/constants';\r\n\r\nexport default function Users() {\r\n  const totalCountData = useQuery(GET_DATA_COUNT);\r\n\r\n  const [search, setSearch] = useState('');\r\n  // const [nameSearch, setNameSearch] = useState(\"\")\r\n  // const [rocketSearch, setRocketSearch] = useState(\"\")\r\n  const totalCount =\r\n    !totalCountData.loading && totalCountData.data.users.length;\r\n  const [form] = Form.useForm();\r\n  const [tableData, setTableData] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const [count, setCount] = useState(totalCount);\r\n\r\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_USERS, {\r\n    variables: {\r\n      limit: itemsPerPage\r\n    },\r\n    fetchPolicy: 'network-only'\r\n  });\r\n  const [deleteUser] = useMutation(DELETE_USER);\r\n  // function rocketFilter(e){\r\n  //   setRocketSearch(e.target.value)\r\n  //   let temp = \"%\"\r\n  //   let searchText = temp.concat(e.target.value, temp)\r\n  //   client.query({\r\n  //     query: GET_USERS,\r\n  //     variables: {\r\n  //       _similar: searchText\r\n  //     }\r\n  //   }).then(res => setTableData(res.data.users))\r\n  //   totalCountData.refetch()\r\n  // }\r\n  // function usernameFilter(e){\r\n  //   setNameSearch(e.target.value)\r\n  //   let temp = \"%\"\r\n  //   let searchText = temp.concat(e.target.value, temp)\r\n  //   console.log(searchText)\r\n  //   client.query({\r\n  //     query: GET_USERS,\r\n  //     variables: {\r\n  //       _ilike: searchText\r\n  //     }\r\n  //   }).then(res => {\r\n  //     setTableData(res.data.users)\r\n  //     setCount(res.data.users.length)\r\n  //   })\r\n  //   totalCountData.refetch()\r\n  // }\r\n  function filter(e) {\r\n    setSearch(e.target.value);\r\n    const temp = '%';\r\n    const searchText = temp.concat(e.target.value, temp);\r\n    client\r\n      .query({\r\n        query: NEW_QUERY,\r\n        variables: {\r\n          search: searchText,\r\n          limit: itemsPerPage\r\n        }\r\n      })\r\n      .then((res) => {\r\n        setTableData(res.data.users);\r\n        setCount(res.data.users.length);\r\n      });\r\n  }\r\n  function confirm(_eq) {\r\n    deleteUser({ variables: { _eq } });\r\n    refetch();\r\n    totalCountData.refetch().then((res) => setCount(res.data.users.length));\r\n    message.success('user deleted!');\r\n  }\r\n  function cancel() {\r\n    message.error('Clicked on No');\r\n  }\r\n  function handlePageChange(pageNum, pageSize) {\r\n    setItemsPerPage(pageSize);\r\n    setPage(pageNum);\r\n    fetchMore({\r\n      variables: { limit: pageSize, offset: (pageNum - 1) * pageSize }\r\n    }).then((res) => {\r\n      setTableData(res.data.users);\r\n    });\r\n    totalCountData.refetch().then((res) => setCount(res.data.users.length));\r\n  }\r\n  function handleSizeChange(current, size) {\r\n    setItemsPerPage(size);\r\n    setPage(current);\r\n    fetchMore({\r\n      variables: { limit: size, offset: (current - 1) * size }\r\n    }).then((res) => {\r\n      setTableData(res.data.users);\r\n    });\r\n    totalCountData.refetch().then((res) => setCount(res.data.users.length));\r\n  }\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name'\r\n    },\r\n    {\r\n      title: 'Rocket',\r\n      dataIndex: 'rocket',\r\n      key: 'rocket'\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <a href={`/users/${record.id}/edit`}>edit</a>\r\n          <Popconfirm\r\n            title=\"Are you sure to delete this user?\"\r\n            onConfirm={() => confirm(record.id)}\r\n            onCancel={cancel}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <a href=\"#delete\">delete</a>\r\n          </Popconfirm>\r\n        </Space>\r\n      )\r\n    }\r\n  ];\r\n  if (loading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoaderComponent />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p>Error {JSON.stringify(error)}</p>;\r\n  }\r\n  return (\r\n    <div className=\"mar\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item>\r\n          <a href={routes.USERS}>Users</a>\r\n        </Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"heading\">\r\n        <h1>{tableData.length > 0 ? totalCount : count} Users</h1>\r\n      </div>\r\n      <div className=\"flex-between\">\r\n        <div className=\"pad\">\r\n          <Button type=\"primary\" href=\"/users/create\">\r\n            Create User\r\n          </Button>\r\n        </div>\r\n        <div className=\"center\">\r\n          <Form form={form} layout=\"inline\">\r\n            <Form.Item required>\r\n              <Input placeholder=\"Search\" value={search} onChange={filter} />\r\n            </Form.Item>\r\n            {/* <Form.Item  \r\n            required \r\n          >\r\n            <Input \r\n              placeholder=\"Name\"\r\n              value={nameSearch} \r\n              onChange={usernameFilter}\r\n            />\r\n          </Form.Item> */}\r\n            {/* <Form.Item\r\n          >\r\n            <Input \r\n              placeholder=\"Rocket Name\"\r\n              value={rocketSearch} \r\n              onChange={rocketFilter}\r\n            />\r\n          </Form.Item> */}\r\n          </Form>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <CommonTable\r\n          dataSource={tableData.length > 0 ? tableData : data.users}\r\n          columns={columns}\r\n          pagination={false}\r\n        />\r\n        <div className=\"flex-end pad\">\r\n          <Pagination\r\n            current={page}\r\n            pageSizeOptions={[1, 5, 10, 20]}\r\n            onShowSizeChange={handleSizeChange}\r\n            showSizeChanger\r\n            onChange={handlePageChange}\r\n            pageSize={itemsPerPage}\r\n            total={data.users.length > 0 ? totalCount : count}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Form, Input, Button, Divider, Layout, Breadcrumb } from 'antd';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\nimport { GET_USER } from './graphql/queries/queries';\r\nimport { EDIT_USER, ADD_USER } from './graphql/mutations/mutations';\r\nimport LoaderComponent from '../components/LoaderComponent';\r\n\r\nexport default function UserForm() {\r\n  const [form] = Form.useForm();\r\n  const { userId } = useParams();\r\n  const { loading, error, data } = useQuery(GET_USER, {\r\n    variables: { _eq: userId }\r\n  });\r\n  const [editUser] = useMutation(EDIT_USER);\r\n  const [addUser] = useMutation(ADD_USER);\r\n  const [twitter, setTwitter] = useState('');\r\n  const [rocket, setRocket] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  async function handleSubmit() {\r\n    setDisabled(true);\r\n    if (userId) {\r\n      await editUser({\r\n        variables: { name, rocket, twitter, _eq: userId }\r\n      }).then(() => {\r\n        setDisabled(false);\r\n        setRedirect(true);\r\n      });\r\n    }\r\n    await addUser({ variables: { name, rocket, twitter } }).then(() => {\r\n      setDisabled(false);\r\n      setRedirect(true);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      setName(data && data?.users[0]?.name);\r\n      setTwitter(data && data?.users[0]?.twitter);\r\n      setRocket(data && data?.users[0]?.rocket);\r\n    }\r\n  }, [data, userId]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoaderComponent />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) return `error! ${error.message}`;\r\n  return (\r\n    <div className=\"mar\">\r\n      {redirect && <Redirect to=\"/users\" />}\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item>\r\n          <a href=\"/users\">Users</a>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>\r\n          {userId ? data?.users[0]?.name : 'Create User'}\r\n        </Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Layout>\r\n        <Layout.Content>\r\n          <Divider>{userId ? 'Edit User' : 'Create User'}</Divider>\r\n          <div className=\"center\">\r\n            <Form form={form} layout=\"inline\" onFinish={handleSubmit}>\r\n              <Form.Item label=\"Name\" required tooltip=\"Add your name\">\r\n                <Input\r\n                  placeholder=\"Name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Rocket\"\r\n                tooltip={{ title: 'Name of the rocket ' }}\r\n              >\r\n                <Input\r\n                  placeholder=\"Rocket Name\"\r\n                  value={rocket}\r\n                  onChange={(e) => setRocket(e.target.value)}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"url\"\r\n                label=\"Your twitter URL\"\r\n                rules={[\r\n                  { type: 'url', warningOnly: true },\r\n                  { type: 'string', min: 6 }\r\n                ]}\r\n              >\r\n                <Input\r\n                  placeholder=\"Twitter URL\"\r\n                  value={twitter}\r\n                  onChange={(e) => setTwitter(e.target.value)}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button type=\"primary\" disabled={disabled} htmlType=\"submit\">\r\n                  {userId ? 'Update' : 'Create'}\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </Layout.Content>\r\n        <Divider />\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Card } from 'antd';\r\nimport { dateConvert } from '../Apollo';\r\nimport { GET_UPCOMING_LAUNCH_BY_ID } from './graphql/queries/queries';\r\nimport LoaderCardComponent from '../components/LoaderCardComponent';\r\n\r\nexport default function GetLaunchById() {\r\n  const { launchId } = useParams();\r\n  const { loading, error, data } = useQuery(GET_UPCOMING_LAUNCH_BY_ID, {\r\n    variables: {\r\n      id: launchId\r\n    }\r\n  });\r\n  if (loading) {\r\n    return <LoaderCardComponent loading={loading} />;\r\n  }\r\n  if (error) return <p>Error {JSON.stringify(error)}</p>;\r\n  return (\r\n    <div className=\"center\">\r\n      <div className=\"heading\">\r\n        <h1>Upcoming Launch by ID</h1>\r\n      </div>\r\n      <div>\r\n        <Card loading={loading} key={data.launchesUpcoming.id}>\r\n          <h4>{data.launchesUpcoming.mission_name}</h4>\r\n          <div>{data.launchesUpcoming.details}</div>\r\n          <div>On {dateConvert(data.launchesUpcoming.launch_date_local)}</div>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Launches from './Launches';\r\nimport Rockets from './Rockets';\r\nimport UpComingLaunches from './UpComingLaunches';\r\nimport GetLaunchById from './GetLaunchById';\r\nimport GetRocketById from './GetRocketById';\r\nimport Users from './Users';\r\nimport UserForm from './UserForm';\r\nimport GetUpComingLaunchById from './GetUpComingLaunchById';\r\n// import Error404 from '../Error404';\r\nimport Apollo from '../Apollo';\r\nimport { routes } from '../common/constants';\r\nimport './styles/global/styles.less';\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Router>\r\n      <Apollo>\r\n        <Switch>\r\n          {/* <Route exact path={routes.ERROR_404} component={Error404}></Route> */}\r\n          <Route exact path={routes.DASHBOARD} component={UpComingLaunches} />\r\n          <Route exact path={routes.LAUNCHES} component={Launches} />\r\n          <Route exact path={routes.ROCKETS} component={Rockets} />\r\n          <Route exact path={routes.USERS} component={Users} />\r\n          <Route exact path={routes.CREATE_USER} component={UserForm} />\r\n          <Route exact path={routes.EDIT_USER} component={UserForm} />\r\n          <Route exact path={routes.ROCKET_BY_ID} component={GetRocketById} />\r\n          <Route exact path={routes.LAUNCH_BY_ID} component={GetLaunchById} />\r\n          <Route\r\n            exact\r\n            path={routes.UPCOMING_LAUNCH_BY_ID}\r\n            component={GetUpComingLaunchById}\r\n          />\r\n        </Switch>\r\n      </Apollo>\r\n    </Router>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.less';\nimport 'antd/dist/antd.less';\nimport Home from './apollo-spacex-graphql/modules/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}