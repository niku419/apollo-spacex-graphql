{"version":3,"sources":["apollo-spacex-graphql/components/NavBar.jsx","apollo-spacex-graphql/Provider.js","apollo-spacex-graphql/components/Launches.jsx","apollo-spacex-graphql/components/Rockets.jsx","apollo-spacex-graphql/components/UpComingLaunches.jsx","apollo-spacex-graphql/components/GetLaunchById.jsx","apollo-spacex-graphql/components/GetRocketById.jsx","apollo-spacex-graphql/components/Users.jsx","apollo-spacex-graphql/components/UserForm.jsx","apollo-spacex-graphql/components/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","useState","window","location","pathname","substring","current","setCurrent","console","log","onClick","e","key","selectedKeys","mode","Item","href","style","textDecoration","rel","Provider","children","link","createHttpLink","uri","credentials","client","ApolloClient","cache","InMemoryCache","ApolloProvider","Launches","useQuery","gql","loading","error","data","map","value","active","width","marginTop","Meta","title","description","JSON","stringify","Container","className","fluid","launches","length","launch","mission_id","mission_name","details","launch_date_local","launch_site","site_name","links","flickr_images","wordWrap","rockets","rocket","id","name","company","country","cost_per_launch","mass","kg","UpComingLaunches","GET_LAUNCHES","launchesUpcoming","GetLaunchById","useParams","launchId","GET_LAUNCH_BY_ID","variables","video_link","rocketId","GET_ROCKET_BY_ID","DELETE_USER","GET_USERS","refetch","useMutation","deleteUser","deleteData","cancel","message","columns","dataIndex","render","text","record","size","onConfirm","_eq","success","onCancel","okText","cancelText","display","placeItems","height","dataSource","users","UserForm","Form","useForm","form","userId","GET_USER","ADD_USER","EDIT_USER","editUser","addUser","twitter","setTwitter","setRocket","setName","redirect","setRedirect","a","then","catch","err","useEffect","to","Content","layout","onFinish","label","required","tooltip","placeholder","onChange","target","rules","type","warningOnly","min","htmlType","Home","exact","path","component","Rockets","Users","GetRocketById","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8df72a0f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Menu } from 'antd'\r\n\r\nexport default function NavBar() {\r\n  const [current, setCurrent] = useState(window.location.pathname.substring(1) || \"home\")\r\n  console.log(current)\r\n  function handleClick(e){\r\n    console.log(e.key)\r\n    setCurrent(e.key)\r\n  }\r\n  return (\r\n    <div>\r\n      <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n        <Menu.Item key=\"home\">\r\n          <a href=\"/\" style={{textDecoration: \"none\"}} rel=\"noopener noreferrer\">\r\n            Home\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"launches\">\r\n          <a href=\"/launches\" style={{textDecoration: \"none\"}} rel=\"noopener noreferrer\">\r\n            Launches\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"rockets\">\r\n          <a href=\"/rockets\" style={{textDecoration: \"none\"}} rel=\"noopener noreferrer\">\r\n            Rockets\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"users\">\r\n          <a href=\"/users\" style={{textDecoration: \"none\"}} rel=\"noopener noreferrer\">\r\n            Users\r\n          </a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport NavBar from './components/NavBar'\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from \"@apollo/client\"\r\n\r\nexport default function Provider({children}) {\r\n  const link = createHttpLink({\r\n    uri: 'https://api.spacex.land/graphql/',\r\n    credentials: 'same-origin'\r\n  })\r\n  const client = new ApolloClient({\r\n    link,\r\n    cache: new InMemoryCache()\r\n  })\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n        <NavBar/>\r\n        {children}\r\n    </ApolloProvider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { gql, useQuery } from \"@apollo/client\"\r\nimport { Card, Skeleton } from 'antd'\r\nimport { Container } from 'react-bootstrap';\r\n\r\nexport default function Launches() {\r\n  const { loading, error, data } = useQuery(gql`\r\n    query {\r\n      launches {\r\n        mission_id\r\n        launch_date_local\r\n        details\r\n        mission_name\r\n        launch_site{\r\n          site_name\r\n        }\r\n        links {\r\n          flickr_images\r\n        }\r\n      }\r\n    }\r\n  `);\r\n  if(loading){\r\n    return (\r\n      [1,2,3].map(value => (\r\n      <Skeleton loading={loading} active>\r\n        <Card style={{ width: 300, marginTop: 16 }} loading={loading} key={value}>\r\n          <Card.Meta\r\n            title=\"loading\"\r\n            description=\"loading\"\r\n          />\r\n        </Card>\r\n      </Skeleton>\r\n    ))\r\n  )\r\n}\r\n if (error) return <p>Error {JSON.stringify(error)}</p>;\r\n  return (\r\n    <Container className=\"p-0 m-0 row\" fluid>\r\n      {data.launches.length > 0 && \r\n        data.launches.map(launch => (\r\n          <Card style={{ width: 300, marginTop: 16 }} className=\"col-md-6\" loading={loading} key={launch.mission_id[0]}>\r\n            <h4><a href={`launches/${launch.mission_id}`}>{launch.mission_name}</a></h4>\r\n            <Card.Meta\r\n              description={launch.details}\r\n            />\r\n            <div className=\"text-muted pt-2\">On {launch.launch_date_local} from {launch.launch_site.site_name}</div>\r\n            <div>{launch.links.flickr_images.map(link => (\r\n              <div style={{wordWrap: \"break-word\"}}><a href={link}>{link}</a></div>\r\n            ))}\r\n            </div>\r\n          </Card>\r\n        ))}\r\n    </Container>\r\n  ) \r\n}\r\n","import React from 'react'\r\nimport { gql, useQuery } from \"@apollo/client\"\r\nimport { Card, Skeleton } from 'antd'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nexport default function Launches() {\r\n  const { loading, error, data } = useQuery(gql`\r\n    query {\r\n      rockets {\r\n        country\r\n        description\r\n        company\r\n        cost_per_launch\r\n        id\r\n        name\r\n        mass {\r\n          kg\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  if(loading){\r\n    return (\r\n      [1,2,3].map(value => (\r\n      <Skeleton loading={loading} active>\r\n        <Card style={{ width: 300, marginTop: 16 }} loading={loading} key={value}>\r\n          <Card.Meta\r\n            title=\"loading\"\r\n            description=\"loading\"\r\n          />\r\n        </Card>\r\n      </Skeleton>\r\n    ))\r\n    )\r\n  }\r\n if (error) return <p>Error {JSON.stringify(error)}</p>;\r\n  return (\r\n    <Container className=\"p-0 m-0 row\" fluid>\r\n      {data.rockets.length > 0 && \r\n        data.rockets.map(rocket => (\r\n          <Card style={{ width: 300, marginTop: 16 }} className=\"col-md-6\" loading={loading} key={rocket.id[0]}>\r\n            <h5><a href={`rockets/${rocket.id}`}>{rocket.name} by {rocket.company}</a></h5>\r\n            <Card.Meta\r\n              description={rocket.description}\r\n            />\r\n            <div className=\"text-muted pt-1\">By {rocket.country}</div>\r\n            <div className=\"text-muted pt-1\">Cost: {rocket.cost_per_launch}</div>\r\n            <div className=\"text-muted pt-1\">Weight: {rocket.mass.kg}kg</div>\r\n          </Card>\r\n        ))}\r\n    </Container>\r\n  ) \r\n}\r\n","import React from 'react'\r\nimport { gql, useQuery } from \"@apollo/client\"\r\nimport { Card, Skeleton } from 'antd'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nexport default function UpComingLaunches() {\r\n  const GET_LAUNCHES = gql`\r\n    query {\r\n      launchesUpcoming(limit: 5) {\r\n        details\r\n        id\r\n        launch_date_local\r\n        mission_id\r\n        mission_name\r\n        launch_site {\r\n          site_name\r\n        }\r\n      }\r\n    }\r\n  `\r\n  const { loading, error, data } = useQuery(GET_LAUNCHES)\r\n  if (error) return <p>Error {JSON.stringify(error)}</p>\r\n  if(loading){\r\n    return (\r\n      [1,2,3].map(value => (\r\n      <Skeleton loading={loading} active>\r\n        <Card style={{ width: 300, marginTop: 16 }} loading={loading} key={value}>\r\n          <Card.Meta\r\n            title=\"loading\"\r\n            description=\"loading\"\r\n          />\r\n        </Card>\r\n      </Skeleton>\r\n    ))\r\n  )\r\n  }\r\n  return (\r\n    <Container className=\"p-0 m-0 row\" fluid>\r\n      {data.launchesUpcoming.length > 0 && \r\n        data.launchesUpcoming.map(launch => (\r\n          <Card style={{ width: 300, marginTop: 16 }} className=\"col-md-6\" loading={loading} key={launch.mission_id[0]}>\r\n            <Card.Meta\r\n              title={launch.mission_name}\r\n              description={launch.details}\r\n            />\r\n            <div className=\"text-muted pt-2\">On {launch.launch_date_local} from {launch.launch_site.site_name}</div>\r\n          </Card>\r\n      ))}\r\n    </Container>\r\n  ) \r\n}\r\n","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { gql, useQuery } from \"@apollo/client\"\r\nimport { Card, Skeleton } from 'antd'\r\nimport { Container } from 'react-bootstrap';\r\n\r\nexport default function GetLaunchById() {\r\n  const { launchId } = useParams()\r\n  let mission_id = launchId\r\n  const GET_LAUNCH_BY_ID = gql`\r\n    query LaunchById($mission_id: String){\r\n      launches(find: {mission_id: $mission_id}) {\r\n        mission_name\r\n        mission_id\r\n        details\r\n        launch_date_local\r\n        launch_site {\r\n          site_name\r\n        }\r\n        links {\r\n          video_link\r\n          flickr_images\r\n        }\r\n      }\r\n    }\r\n  `\r\n  const { loading, error, data } = useQuery(GET_LAUNCH_BY_ID, {\r\n    variables: {\r\n      mission_id\r\n    }\r\n  });\r\n  if(loading){\r\n    return (\r\n      [1,2,3].map(value => (\r\n      <Skeleton loading={loading} active>\r\n        <Card style={{ width: 300, marginTop: 16 }} loading={loading} key={value}>\r\n          <Card.Meta\r\n            title=\"loading\"\r\n            description=\"loading\"\r\n          />\r\n        </Card>\r\n      </Skeleton>\r\n    ))\r\n    )\r\n  }\r\n  if (error) return <p>Error {JSON.stringify(error)}</p>;\r\n  return (\r\n    <Container className=\"p-0 m-0 row\" fluid>\r\n    {data.launches.length > 0 && \r\n      data.launches.map(launch => (\r\n        <Card style={{ width: 300, marginTop: 16 }} className=\"col-md-6\" loading={loading} key={launch.mission_id[0]}>\r\n          <h4><a href={`launches/${launch.mission_id}`}>{launch.mission_name}</a></h4>\r\n          <Card.Meta\r\n            description={launch.details}\r\n          />\r\n          <div className=\"text-muted pt-2\">On {launch.launch_date_local} from {launch.launch_site.site_name}</div>\r\n          <div>Video link: <a href={launch.links.video_link}>{launch.links.video_link}</a></div>\r\n        </Card>\r\n      ))}\r\n    </Container>\r\n    ) \r\n}","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { gql, useQuery } from \"@apollo/client\"\r\nimport { Card, Skeleton } from 'antd'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nexport default function GetLaunchById() {\r\n  const { rocketId } = useParams()\r\n  const GET_ROCKET_BY_ID = gql`\r\n    query RocketById($id: ID!){\r\n      rocket(id: $id) {\r\n        company\r\n        cost_per_launch\r\n        country\r\n        description\r\n        id\r\n        mass {\r\n          kg\r\n        }\r\n        name\r\n      }\r\n    }\r\n  `\r\n  const { loading, error, data } = useQuery(GET_ROCKET_BY_ID, { variables: { id: rocketId }})\r\n  if(loading){\r\n    return (\r\n      [1,2,3].map(value => (\r\n      <Skeleton loading={loading} active>\r\n        <Card style={{ width: 300, marginTop: 16 }} loading={loading} key={value}>\r\n          <Card.Meta\r\n            title=\"loading\"\r\n            description=\"loading\"\r\n          />\r\n        </Card>\r\n      </Skeleton>\r\n    ))\r\n  )\r\n  }\r\n  if (error) return <p>Error {JSON.stringify(error)}</p>;\r\n  return (\r\n    <Container className=\"p-0 m-0 row\" fluid>\r\n      <Card style={{ width: 300, marginTop: 16 }} className=\"col-md-6\" loading={loading}>\r\n        <h3>{data.rocket.name} by {data.rocket.company} from {data.rocket.country}</h3>\r\n        <Card.Meta\r\n          description={data.rocket.description}\r\n        />\r\n        <div className=\"text-muted pt-2\">Weight: {data.rocket.mass.kg}kg</div>\r\n        <div className=\"text-muted pt-2\">Cost: {data.rocket.cost_per_launch}</div>\r\n      </Card>\r\n    </Container>\r\n  ) \r\n}","import React from 'react'\r\nimport { gql, useQuery, useMutation } from \"@apollo/client\"\r\nimport { Table, Space, message, Popconfirm } from 'antd'\r\n\r\nexport default function UpComingLaunches() {\r\n  const DELETE_USER = gql`\r\n    mutation delete_users($_eq: uuid){\r\n      delete_users(where: {id: {_eq : $_eq}}){\r\n        returning{ \r\n          name\r\n          rocket\r\n          twitter\r\n        }\r\n      }\r\n    }\r\n  `\r\n  const GET_USERS = gql`\r\n    query {\r\n      users {\r\n        name\r\n        id\r\n        rocket\r\n      }\r\n    }\r\n  `\r\n  const { loading, error, data, refetch } = useQuery(GET_USERS);\r\n  const [deleteUser, deleteData] = useMutation(DELETE_USER)\r\n  function confirm(_eq) {\r\n    deleteUser({ variables: { _eq } })\r\n    refetch()\r\n    console.log(_eq)\r\n    message.success('user deleted!')\r\n  }\r\n  function cancel(e) {\r\n    console.log(e);\r\n    message.error('Clicked on No')\r\n  }\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Rocket',\r\n      dataIndex: 'rocket',\r\n      key: 'rocket',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <a href={`/users/${record.id}/edit`}>edit</a>\r\n          <Popconfirm\r\n            title=\"Are you sure to delete this user?\"\r\n            onConfirm={() => confirm(record.id)}\r\n            onCancel={cancel}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <a>delete</a>\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  if(deleteData.data){\r\n    console.log(deleteData.data)\r\n  }\r\n  if(loading){  \r\n    return (  \r\n      <div style={{display: \"grid\", placeItems: \"center\", height: \"100vh\"}}>\r\n        Loading...\r\n      </div>\r\n    )\r\n  }\r\n  if(error){\r\n    return (\r\n      <p>Error {JSON.stringify(error)}</p>\r\n    )\r\n  } \r\n  if(data){\r\n    return (\r\n      <div className=\"mt-2\">\r\n        <Table dataSource={data.users} columns={columns} />\r\n      </div>\r\n    ) \r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Form, Input, Button, Divider, Layout } from 'antd';\r\nimport { gql, useMutation, useQuery } from \"@apollo/client\"\r\nimport { useParams, Redirect } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nexport default function UserForm() {\r\n  const [form] = Form.useForm()\r\n  const { userId } = useParams()\r\n  const GET_USER = gql`\r\n    query GetUser($_eq: uuid){\r\n      users(where: {id: {_eq: $_eq}}){\r\n        name\r\n        id\r\n        rocket \r\n        twitter\r\n      }\r\n    }\r\n  `\r\n  const ADD_USER = gql`\r\n    mutation insert_users($name: String, $rocket: String, $twitter: String) {\r\n      insert_users(objects: { name: $name, rocket: $rocket, twitter: $twitter }) {\r\n        returning {\r\n          name\r\n          id\r\n          rocket\r\n          twitter\r\n        }\r\n      }\r\n    }\r\n  `\r\n  const EDIT_USER = gql`\r\n    mutation update_users($_eq: uuid, $name: String, $rocket: String, $twitter: String) {\r\n      update_users(where : { id: { _eq: $_eq }}, _set: {name: $name, rocket: $rocket, twitter: $twitter }){\r\n        returning{\r\n          id\r\n          name\r\n          rocket\r\n          twitter\r\n        }\r\n      }\r\n    }\r\n  `\r\n  const { loading, error, data } = useQuery(GET_USER, { variables: { _eq: userId } })\r\n  const [editUser ] = useMutation(EDIT_USER)\r\n  const [addUser ] = useMutation(ADD_USER)\r\n  const [twitter, setTwitter] = useState(\"\")\r\n  const [rocket, setRocket] = useState(\"\")\r\n  const [name, setName] = useState(\"\")\r\n  const [redirect, setRedirect] = useState(false)\r\n\r\n  async function handleSubmit(e){\r\n    if(userId){\r\n      await editUser({ variables: { name, rocket, twitter, _eq: userId } })\r\n      return setRedirect(true)\r\n    }\r\n    await addUser({ variables: { name, rocket, twitter }})\r\n    .then(() => setRedirect(true))\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(userId){  \r\n      setName(data && data?.users[0]?.name)\r\n      setTwitter((data && data?.users[0]?.twitter))\r\n      setRocket(data && data?.users[0]?.rocket)\r\n    }\r\n  }, [data, userId])\r\n\r\n  if (loading) return 'getting user details';\r\n  if (error) return `error! ${error.message}`\r\n  return (\r\n    <Container fluid>\r\n      <Layout>\r\n        {redirect && <Redirect to='/users'/>}\r\n        <Layout.Content>\r\n          <Divider>{userId ? 'Edit User' : 'Create User'}</Divider>\r\n          <Form\r\n            form={form}\r\n            layout=\"inline\"\r\n            onFinish={handleSubmit}\r\n          >\r\n            <Form.Item \r\n              label=\"Name\" \r\n              required \r\n              tooltip=\"Add your name\"\r\n            >\r\n              <Input \r\n                placeholder=\"Name\"\r\n                value={name} \r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Rocket\"\r\n              tooltip={{ title: 'Name of the rocket '}}\r\n            >\r\n              <Input \r\n                placeholder=\"Rocket Name\"\r\n                value={rocket} \r\n                onChange={(e) => setRocket(e.target.value)}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"url\"\r\n              label=\"Your twitter URL\"\r\n              rules={[\r\n                { type: 'url', warningOnly: true },\r\n                { type: 'string', min: 6 },\r\n              ]}\r\n            >\r\n              <Input \r\n                placeholder=\"Twitter URL\" \r\n                value={twitter} \r\n                onChange={(e) => setTwitter(e.target.value)}  \r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"submit\" htmlType=\"submit\">{userId ? 'Update' : 'Create'}</Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Layout.Content>\r\n        <Divider/>\r\n      </Layout>\r\n    </Container>\r\n  )\r\n}","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Provider from '../Provider'\r\nimport Launches from './Launches'\r\nimport Rockets from './Rockets'\r\nimport UpComingLaunches from './UpComingLaunches'\r\nimport GetLaunchById from './GetLaunchById'\r\nimport GetRocketById from './GetRocketById'\r\nimport Users from './Users'\r\nimport UserForm from './UserForm'\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Router>\r\n      <Provider>\r\n        <Switch>\r\n          <Route exact path='/' component={UpComingLaunches}></Route>\r\n          <Route exact path='/launches' component={Launches}></Route>\r\n          <Route exact path='/rockets' component={Rockets}></Route>\r\n          <Route exact path='/users' component={Users}></Route>\r\n          <Route exact path='/users/create' component={UserForm}></Route>\r\n          <Route exact path='/users/:userId/edit' component={UserForm}></Route>\r\n          <Route exact path='/rockets/:rocketId' component={GetRocketById}></Route>\r\n          <Route exact path='/launches/:launchId' component={GetLaunchById}></Route>\r\n        </Switch>\r\n      </Provider>\r\n    </Router>\r\n  )\r\n}","import React from 'react'\nimport './App.css'\nimport 'antd/dist/antd.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Home from './apollo-spacex-graphql/components/Home'\n\nfunction App() {\n  return (\n    <div>\n      <Home/>\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}